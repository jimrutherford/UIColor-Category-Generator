#import 'sandbox.js'
#import 'swift-config.js'
#import 'common.js'

var swatchLayers = getSwatchLayers();

var methodSignatures = [];
var uicolorCodes = [];

var prefix = [doc askForUserInput:"What is your category prefix?" initialValue:"SKC"];

for (var i=0; i < [swatchLayers count]; i++)
{
  var layer = [swatchLayers objectAtIndex:i];

  if ([layer isMemberOfClass:[MSShapeGroup class]])
  {
    var swatchName = layer.name();

    if (swatchName != "untitled color")
    {
      swatchName = makeNiceName(swatchName);

      methodSignatures.push(generateMethodSignature(swatchName, prefix));
      uicolorCodes.push(generateFillColor(layer));
    }
  }
}

var swiftText = commentHeader + swiftPrefix;

for (var i=0; i < methodSignatures.length; i++)
{

  swiftText += "\t" + methodSignatures[i];
  swiftText += newLine;
  swiftText += "\t" + "{";
  swiftText += newLine;
  swiftText += "\t\t" + uicolorCodes[i];
  swiftText += newLine;
  swiftText += "\t" + "}";
  swiftText += newLine;
  swiftText += newLine;
}

swiftText += end;

var swiftPath = getDocumentPath() + "SketchColors.swift";

saveFile(swiftPath, swiftText);

function generateMethodSignature(name, prefix)
{
    return "class func " + prefix + name + "() -> UIColor!";
}

function generateFillColor(layer)
{
  var fill = layer.style().fills().firstObject();
  var red = fill.color().red().toFixed(3).toString();
  var green = fill.color().green().toFixed(3).toString();
  var blue = fill.color().blue().toFixed(3).toString();
  var alpha = fill.color().alpha().toFixed(3).toString();

  return "return UIColor(red: " + red + ", green: " + green + ", blue: " + blue + ", alpha: " + alpha + ")";
}
